{
	"info": {
		"_postman_id": "2fa0d62c-5f32-4e22-b46b-a511a282a2c4",
		"name": "Teste ServeRest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16406007"
	},
	"item": [
		{
			"name": "Produtos",
			"item": [
				{
					"name": "Cadastrar um produto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar mensagem de sucesso\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
									"});\r",
									"pm.test(\"Status code é 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Fone ruim\",\r\n  \"preco\": 55,\r\n  \"descricao\": \"headphone fanta\",\r\n  \"quantidade\": 1000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}produtos",
							"host": [
								"{{local}}produtos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar produtos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar produto da Lista\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Samsung 60 polegadas\");\r",
									"});\r",
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}produtos",
							"host": [
								"{{local}}produtos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listando produto por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local}}produtos/G3B0iABc7dJhXnFz",
							"host": [
								"{{local}}produtos"
							],
							"path": [
								"G3B0iABc7dJhXnFz"
							]
						}
					},
					"response": []
				},
				{
					"name": "Editar produto",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Meats do best\",\r\n    \"preco\": 1000,\r\n    \"descricao\": \"headphone paralelo\",\r\n    \"quantidade\": 250\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}produtos/K6leHdftCeOJj8BJ",
							"host": [
								"{{local}}produtos"
							],
							"path": [
								"K6leHdftCeOJj8BJ"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletando produto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar a mensagem\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{local}}produtos/G3B0iABc7dJhXnFz",
							"host": [
								"{{local}}produtos"
							],
							"path": [
								"G3B0iABc7dJhXnFz"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Usuarios",
			"item": [
				{
					"name": "Cadastrar usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const resposta = pm.response.json();\r",
									"\r",
									"pm.test(\"Validando status codes válidos: 201 ou 400\",()=>{\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,400]);\r",
									"})\r",
									"\r",
									"pm.test(\"Verifica se o status code é 201 e mensagem de cadastro realizado com sucesso\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(resposta.message).to.eql(\"Cadastro realizado com sucesso\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verifica se o status code é 400 e mensagem de email já cadastrado\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.expect(resposta.message).to.eql(\"Este email já está sendo usado\")\r",
									"});\r",
									"\r",
									"pm.test(\"Verificando se o perfil é um objeto\", ()=>{\r",
									"    const resposta = pm.response.json();\r",
									"    pm.expect(resposta).to.be.an(\"object\");\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Luan de teste\",\r\n  \"email\": \"luan_qa@ebac.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}usuarios",
							"host": [
								"{{local}}usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar todos os usuários",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 100ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(100);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}usuarios",
							"host": [
								"{{local}}usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar usuário por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"pm.test(\"Verificando opções válidas de status code: 200 ou 400\", ()=>{\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,400]);\r",
									"})\r",
									"\r",
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verificando texto para usuário não encontrado\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Usuário não encontrado\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}usuarios/GJoGGxvqzVhhS1GQ",
							"host": [
								"{{local}}usuarios"
							],
							"path": [
								"GJoGGxvqzVhhS1GQ"
							]
						}
					},
					"response": []
				},
				{
					"name": "Alterar usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const resposta = pm.response.json()\r",
									"\r",
									"pm.test(\"Verificando opções válidas de status code: 200, 201 e 400\", ()=>{\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201,400]);\r",
									"})\r",
									"\r",
									"pm.test(\"Status code is 200 e mensagem de registro alterado\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(resposta.message).to.eql(\"Registro alterado com sucesso\")\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201 e mensagem de cadastro realizado\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(resposta.message).to.eql(\"Cadastro realizado com sucesso\")\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400 e mensagem de email ja utilizado\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.expect(resposta.message).to.eql(\"Este email já está sendo usado\")\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"another_user\",\r\n    \"email\": \"luan2002@com.com.br\",\r\n    \"password\": \"another_acc\",\r\n    \"administrador\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}usuarios/jbFT5pGzX89JJJJJ",
							"host": [
								"{{local}}usuarios"
							],
							"path": [
								"jbFT5pGzX89JJJJJ"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletar usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const resposta = pm.response.json()\r",
									"\r",
									"pm.test(\"Validando status code permitidos: 200 ou 400\",()=>{\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,400])\r",
									"})\r",
									"\r",
									"pm.test(\"Codigo 200 e mensagem de registro excluido com sucesso\",()=>{\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(resposta.message).to.eql(\"Registro excluído com sucesso\");\r",
									"})\r",
									"\r",
									"pm.test(\"Codigo 400 e mensagem de Não é permitido excluir usuário com carrinho cadastrado\",()=>{\r",
									"    pm.response.to.have.status(400);\r",
									"    pm.expect(resposta.message).to.eql(\"Não é permitido excluir usuário com carrinho cadastrado\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local}}usuarios/MYeIk3AnPz6xi2X5",
							"host": [
								"{{local}}usuarios"
							],
							"path": [
								"MYeIk3AnPz6xi2X5"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Realizar login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const resposta = pm.response.json();\r",
							"pm.globals.set(\"token\", resposta.authorization);\r",
							"\r",
							"pm.test(\"Status code é 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Tempo de resposta menor que 100ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(100);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Imx1YW5fcWFAZWJhYy5jb20uYnIiLCJwYXNzd29yZCI6InRlc3RlIiwiaWF0IjoxNjc5NzQ3MjM4LCJleHAiOjE2Nzk3NDc4Mzh9.OFI7QYu_gfNHgC44OcF7CtIE8lII0k4qT5AOxI_L5Og",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"luan_qa@ebac.com.br\",\r\n    \"password\":\"teste\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{local}}login",
					"host": [
						"{{local}}login"
					]
				}
			},
			"response": []
		}
	]
}